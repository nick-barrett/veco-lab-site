apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: cns-storageclass
  namespace: default
  annotations:
      storageclass.kubernetes.io/is-default-class: "true"
provisioner: csi.vsphere.vmware.com
allowVolumeExpansion: true
parameters:
  datastoreurl: "ds:///vmfs/volumes/65bdbe49-445bbede-b8d9-005056a99c30/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: new-cloud-init-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Block
  resources:
    requests:
      storage: 1Gi
  storageClassName: cns-storageclass
# todo: 
# - mount secrets for VCO
# - make a container image to generate ISO in PVC
---
apiVersion: vmoperator.vmware.com/v1alpha1
kind: VirtualMachine
metadata:
  name: vce-vm
  namespace: default
  annotations:
    vmoperator.vmware.com/image-supported-check: disable
spec:
  className: guaranteed-small
  imageName: 192.168.60.85:9000/VeloCloud-EdgeRooted.ova
  powerState: poweredOn
  networkInterfaces:
  - networkName: "VCE LAN"
  - networkName: "Dummy Network"
  - networkName: "VM Network"
  - networkName: "Dummy Network"
  - networkName: "Dummy Network"
  - networkName: "Dummy Network"
  volumes:
  - name: cloudinit
    persistentVolumeClaim: 
      claimName: new-cloud-init-pvc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vce-prop
  namespace: default
data:
  instance-id: id-ovf
  user-data: |
    #cloud-config
    chpasswd: { expire: False }
    ssh_pwauth: True
    velocloud:
      vce:
        vco: vco12-usvi1.velocloud.net
        activation_code: 3GVE-7KA2-X5J3-AVEN
        vco_ignore_cert_errors: true
  hostname: new-vce